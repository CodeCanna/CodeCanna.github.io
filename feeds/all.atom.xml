<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>My two Beans</title><link href="https://codecanna.github.io/" rel="alternate"></link><link href="https://codecanna.github.io/feeds/all.atom.xml" rel="self"></link><id>https://codecanna.github.io/</id><updated>2024-11-09T08:51:00-07:00</updated><entry><title>A new Era in Programming</title><link href="https://codecanna.github.io/a-new-era.html" rel="alternate"></link><published>2024-11-09T08:51:00-07:00</published><updated>2024-11-09T08:51:00-07:00</updated><author><name>Mark A Waid Jr &lt;codecannamw@gmail.com&gt;</name></author><id>tag:codecanna.github.io,2024-11-09:/a-new-era.html</id><summary type="html">&lt;p&gt;CISA and FBI released statements condemning the use of memory unsafe languages, and lazy security practices.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;CISA &amp;amp; Secure by Design&lt;/h1&gt;
&lt;p&gt;&lt;img alt="CISA Logo" src="https://media.datacenterdynamics.com/media/images/cisaDHS.2e16d0ba.fill-1200x630.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The CISA released a &lt;a href="https://www.cisa.gov/resources-tools/resources/product-security-bad-practices"&gt;report&lt;/a&gt; along with the FBI on October 16, 2024 outlining certain points in the &lt;a href="https://www.cisa.gov/securebydesign"&gt;Secure by Design&lt;/a&gt; outline.  Secure by Design is a set of guidelines for designing software with security at it's core, instead of more of a secondary thought or "feature".  In this standard security in software it looked at as a core concern rather than a feature to be advertised.&lt;/p&gt;
&lt;p&gt;This might seem like an obvious concept to have security be a core concept of any software, but it is very time consuming and difficult to write secure, and safe software.  Not all software developers put security over pushing features to their software.  This is never a good idea, but people do it regardless.  There are many ways that software can become compromised.  Most of these are human error caused poor coding practices, and lazy development.  It's easy to accidentally store sensitive data as plain strings instead of encrypting it, or improperly managing memory and exposing data through memory leaks.&lt;/p&gt;
&lt;p&gt;By being selective in the technologies used when creating software one care create software that is secured from the ground up.&lt;/p&gt;
&lt;p&gt;Some things to consider when creating software:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;What programming language will the software be written in?&lt;/li&gt;
&lt;li&gt;Who will use the software?&lt;/li&gt;
&lt;li&gt;What will the software do or be responsible for?&lt;/li&gt;
&lt;li&gt;What sort of data is the program working with? I.E. is it sensitive user data?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now it's important to understand that one of the most important and difficult things to decide when creating software is the programming language.  You have to think long and hard about what you program will be doing and where it will be used.  Is it an embedded system?  Or is it a cloud service?  For example a web developer doesn't really need to worry about memory safety because the languages they use don't deal directly with computer memory.  However when writing something like an embedded program or an operating system you will probably be using something like C or C++.  C has been around since the 70s and C++ almost as long.  There were no "memory safe" languages back then, as this is a relatively new concept.&lt;/p&gt;
&lt;h4&gt;What is memory safety?&lt;/h4&gt;
&lt;p&gt;When you write a computer program you might tell the computer programmatically that you want to store the number 5 numbers in an array or list, now in C you can access each number in this list, but what if I gave you a grocery list with 5 items on it, you get the five items, and I look for six items.  You would be confused, well in C the computer isn't smart enough to be confused and just gives you whatever it's got stored where the alleged 6th item on the grocery list would be.  Remember that the memory is shared by other programs, and if a program stored sensitive data at that address then the computer would "leak" this data to you.  This is what's called a data leak, and it's one of many pitfalls with coding in C and other older languages that deal directly with memory. When speaking of a memory safe language we are speaking of a language that by design avoid most or all of these pitfalls.&lt;/p&gt;
&lt;h4&gt;Why is it such a big deal to stop using C/C++?&lt;/h4&gt;
&lt;p&gt;The &lt;a href="https://en.wikipedia.org/wiki/C_(programming_language)"&gt;C&lt;/a&gt; programming language has been around since the early 1970s which in computer terms is since ancient times, it was the turning point in computer programming in it's day when developers used languages that were less human readable and before that they forged their software in literal 0s and 1s.  In those times it was the job of the software developer to program proper and secure memory management into their program with little to no help from the computer.  Due to the age of C it's the foundation the entire world's software base, it's literally everywhere.  Re-writing all of our current software in memory-safe languages is unrealistic.  Its better to concentrate on securing the current software and writing any new software in a memory safe language.  Because of the issues with C CISA has encouraged software developers to stop using it.  This is a huge leap forward, and to some a terrifying change.&lt;/p&gt;
&lt;h4&gt;What are some memory safe programming languages?&lt;/h4&gt;
&lt;p&gt;So the CISA has declared that developers should stop using memory unsafe languages like C/C++ so what are the options?&lt;/p&gt;
&lt;p&gt;You might be happy to know that he list of memory safe languages is extensive, and the CISA gives a list of their website but here are a few:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.python.org/"&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://go.dev/"&gt;Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.java.com/en/"&gt;Java&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://dotnet.microsoft.com/en-us/languages/csharp"&gt;C#&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.swift.org/"&gt;Swift&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I myself am learning Rust, and I'm working on a program called &lt;a href="https://github.com/CodeCanna/spacepix"&gt;Spacepix&lt;/a&gt; and I'm writing it in Rust.  Because it's written in Rust, I don't have to worry about these pit falls.  There is a downside to all of this, and that is new developers won't know how to fix or avoid these issues if they ever come across them in their journey.&lt;/p&gt;
&lt;h4&gt;Two factor authentication&lt;/h4&gt;
&lt;p&gt;&lt;img alt="2FA" src="https://dev.mos.cms.futurecdn.net/sfHiqFodx97BHyKDAXhEKe.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.m.wikipedia.org/wiki/Multi-factor_authentication"&gt;Two factor authentication&lt;/a&gt; is another technology recommended that developers implement into the security plan of their software. It uses multiple means of identifying the user rather than just an email and password.  This can include a PIN, the use of a third party authentication software, or even a USB fingerprint scanner.  Like it or not most apps are going to multi or two factor authentication. &lt;/p&gt;
&lt;h4&gt;The part of open source software&lt;/h4&gt;
&lt;p&gt;&lt;img alt="OSS" src="https://miro.medium.com/v2/resize:fit:1200/1*44UXHdH0lxIvxWRvlMId-g.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;In their report they say "Software manufacturers should responsibly consume and sustainably contribute to the open source software that they depend on." And I agree with this completely, its not the fault of open source software that it has known security issues that haven't been fixed when the project relies on volunteers and charity, if a company wants to use open source software but it doesn't conform to their needs they can contribute either financially or by contributing to it's codebase.  Valve's &lt;a href="https://store.steampowered.com/steamdeck"&gt;Steam Deck&lt;/a&gt; is a great example of this.  They could have very well put Windows their Steam Deck, but instead they saved money, and helped a wonderful open source project at the same time. By using &lt;a href="https://archlinux.org/"&gt;Arch Linux&lt;/a&gt; as the base for their OS they financially supported this project and avoided expensive service contracts with Microsoft. The most expensive endeavor has been their &lt;a href="https://en.m.wikipedia.org/wiki/Proton_(software)"&gt;windows compatibility&lt;/a&gt; layer that allows games designed to only run on windows run on Linux, and they very easily could have spent that money on a Windows service contract, but they contributed a MAJOR piece of software to the open source software community and cause.&lt;/p&gt;
&lt;p&gt;Anyway back to security, since Valve is using this open source OS valve must ensure that it's safe, and secure and it must contribute to fixed these issues before using the software in a project.&lt;/p&gt;
&lt;h2&gt;My Two Beans&lt;/h2&gt;
&lt;p&gt;ðŸ«˜ðŸ«˜\
Software companies have taken a laid back approach when it comes to security unless pressure is put on from the beginning to be secure. Security is often overlooked in favor of adding more features quicker, and that is a bad approach that can cost time, data, and money.  By going with a secured by design approach from the beginning its often easier to implement security into more parts of your software. It's up to the developer to make sure software is secure for the user, its not the responsibly of the user.  It takes time, and costs more money to develop software with security in mind, but it's a necessary expense when compared to the alternative. Thank you so much for reading, this was my two beans.&lt;/p&gt;</content><category term="Cyber Security"></category><category term="technology"></category><category term="computer programming"></category><category term="CISA"></category><category term="IT"></category><category term="computers"></category><category term="software"></category><category term="security"></category><category term="cyber security"></category></entry><entry><title>Redox OS</title><link href="https://codecanna.github.io/redox-os.html" rel="alternate"></link><published>2024-11-04T19:52:00-07:00</published><updated>2024-11-04T19:52:00-07:00</updated><author><name>Mark A Waid Jr</name></author><id>tag:codecanna.github.io,2024-11-04:/redox-os.html</id><summary type="html">&lt;p&gt;Check out this new Unix-like OS written in Rust called Redos OS.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Redox OS&lt;/h1&gt;
&lt;p&gt;&lt;img alt="Redox OS Logo" src="https://wikiwandv2-19431.kxcdn.com/_next/image?url=https:%2F%2Fupload.wikimedia.org%2Fwikipedia%2Fcommons%2Fthumb%2F5%2F57%2FRedox_logo_2015.svg%2F1500px-Redox_logo_2015.svg.png&amp;amp;w=3840&amp;amp;q=50"&gt;&lt;/p&gt;
&lt;p&gt;I thought it would be cool if I covered the development of &lt;a href="https://redox-os.org/"&gt;Redox OS&lt;/a&gt;.  This OS is in early development, and is up and coming.&lt;/p&gt;
&lt;h2&gt;Another Operating System?&lt;/h2&gt;
&lt;p&gt;You might ask yourself: Why do we need so many different operating systems?  That is a valid question, because operating systems are hard to get used to using, and complex to develop, so why  are there so many? The answer is simpler than we might think. I believe that answer is in the problem that operating system attempt to solve.&lt;/p&gt;
&lt;p&gt;An operating system in simple terms is a collection of software (rarely a single program) that runs on computer hardware. This software manages the computer's resources to accomplish the will of the user, the hard part comes when UI and security comes in.&lt;/p&gt;
&lt;h3&gt;UI&lt;/h3&gt;
&lt;p&gt;UI (User Interface) is what a user uses to physically interact with data displayed on the screen in a way that's pleasing to the eyes. A UI must be fast, intuitive, stable, and secure.  Because of this they can be difficult to develop.&lt;/p&gt;
&lt;h3&gt;Security&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Cybersecurity Image" src="https://www.biia.com/wp-content/uploads/2013/08/iStock_000022579586Medium.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Security in the context of operating systems usually refers to the way the operating system handles files, user input, network traffic, passwords, down to managing data stored in RAM while a program runs. Security is the most important aspect of an operating system, and is necessary for the developers of an operating system to get right before it is used in production. This is an ongoing process that usually spans the entire life of the OS. And we have only discussed operating systems in the context of individual users, that doesn't cover how they are used to run servers in what's called a "headless" configuration. In this mode the OS doesn't run a UI and only manages the computer resources to host a web site, cloud app, game, or some other software.&lt;/p&gt;
&lt;h2&gt;So what problems do Redox OS attempt to solve?  And how?&lt;/h2&gt;
&lt;p&gt;Redox OS is YAUOS (Yet Another Unix-like Operating System) but this one differs from Linux or FreeBSD by following a different paradigm. Redox is a &lt;a href="https://en.wikipedia.org/wiki/Microkernel"&gt;microkernel&lt;/a&gt; operating system, it minimizes the amount of software that runs and communicates directly with the hardware. This provides better security than traditional kernels because software that would usually run at a lower level can run at a higher level, this makes it safer. Redox has a funny new thing up it's sleeve though, we'll talk about that next.&lt;/p&gt;
&lt;h3&gt;Redos is written in Rust.  So what?&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Rust Lang Image" src="https://sanet.pics/storage-6/1220/uGsov8AhfvJOSgSNlHmUMH57ZAdhVVuB.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Redox is one of the first operating systems written in a language called &lt;a href="https://www.rust-lang.org/"&gt;Rust&lt;/a&gt;. Rust is a special programming language that guarantees certain things while using it that other languages can't. Rust has what's called &lt;a href="https://en.wikipedia.org/wiki/Memory_safety"&gt;memory safety&lt;/a&gt;. This protects the programmer from pitfalls of languages such as C and C++ that Linux and Windows are written in. This also improves security as a high percentage of vulnerabilites are the result of poor programming practices, and human error. So the idea is, if the programming language used to program the operating system is itself safe and secure, it will to a long way towards writing secure operating systems.&lt;/p&gt;</content><category term="RedoxOS"></category><category term="os"></category><category term="operating system"></category><category term="microkernel"></category><category term="redox"></category><category term="rust"></category></entry><entry><title>AI, Bio Computing, and it's Impacts</title><link href="https://codecanna.github.io/ai-biocomputing-and-its-impacts.html" rel="alternate"></link><published>2024-11-03T19:13:00-07:00</published><updated>2024-11-03T19:13:00-07:00</updated><author><name>Mark A Waid</name></author><id>tag:codecanna.github.io,2024-11-03:/ai-biocomputing-and-its-impacts.html</id><summary type="html">&lt;p&gt;What are the implications of AI and Bio Computing for our society?&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Artificial Intelligence&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Image Source: https://itchronicles.com/wp-content/uploads/2020/11/where-is-ai-used.jpg" src="https://itchronicles.com/wp-content/uploads/2020/11/where-is-ai-used.jpg"&gt;&lt;/p&gt;
&lt;p&gt;When you hear the term A.I., what comes to mind? Terminator? The computer from Space Odyssey? Â Video game AI? Â These are all small examples of artificial intelligence.Â  AI exists to solve many problems, but one major one is the problem of &lt;a href="https://en.wikipedia.org/wiki/Combinatorial_explosion"&gt;combinatorial explosion&lt;/a&gt;, where a problem's solution becomes more complex as the problem's complexity grows. Â Some problems are complex but have simple answers, while other problems seem simple but require complex answers, while others have a solution that grows in complexity with the problem.&lt;/p&gt;
&lt;p&gt;In computing, this has the effect of developers writing more complex, error-prone code to solve these problems, which require a complex solution. A.I. can make decisions based on its own "experience" rather than relying on a developer to code for every possible contingency.&lt;/p&gt;
&lt;h2&gt;Bio Computing&lt;/h2&gt;
&lt;p&gt;&lt;img alt="https://nextconf.eu/wp-content/uploads/2017/02/star-trek-borg.jpg" src="https://nextconf.eu/wp-content/uploads/2017/02/star-trek-borg.jpg"&gt;
Biocomputing is a real science fiction sounding thing, but make no mistake, it's very real and very cool!  Biocomputing is the study, research, and development of computer systems that run on biological constructs.  Using neurons to make a computation or DNA to store data.  These are examples of biocomputing.&lt;/p&gt;
&lt;p&gt;Have you ever heard of the Borg from Star Trek?  That's a great scifi example of biocomputing.  If you don't know, the Borg are a fictional race from the Star Trek universe who are augmented with computerized implants to take over certain bodily functions as well as connect them to the "Hive Mind."  We have computer implants right now that perform important biological functions for their users.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Loop Recorder&lt;/li&gt;
&lt;li&gt;Pace Maker&lt;/li&gt;
&lt;li&gt;Ocular Implant&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I was reading an &lt;a href="https://fandomwire.com/after-a-calculator-powered-by-700-potatoes-gamers-manage-to-run-doom-on-rat-brain-cells/"&gt;article&lt;/a&gt; yesterday about researchers who were able to get DOOM to run on Neurons.  Another really cool example is researcher who used a species of slime mold to map out the most efficient route between cities in Japan.  And the slime mold possesses no brain.  Yet it can find the most efficient rout in a fraction of the time that Japan's engineers were able to.&lt;/p&gt;
&lt;h2&gt;How it effects us all&lt;/h2&gt;
&lt;h3&gt;Everyday Life&lt;/h3&gt;
&lt;p&gt;The effects of this technology on everyday life is yet to be seen but, society has wasted little time integrating A.I. into every aspect of life, which has been as helpful as it has been divisive.  It has come with all sorts of implications from artists feeling threatened because of &lt;a href="https://en.wikipedia.org/wiki/Generative_artificial_intelligence"&gt;generative AI&lt;/a&gt; to being paranoid that everything you see online is made by AI instead of someone putting in work.  YouTube videos, you might even wonder if this article was written by AI (it wasn't).  A.I. is another tool that we must be mature enough to use, or we will live in fear of it and it won't end well.    A.I. allows users to perform more work in less time, but I feel it also makes that work less rewarding.  If I generated this article than I wouldn't get as much out of it as I am sitting next to my wife writing it by hand.  On the other hand, medical research, security, among other things is where I feel that A.I. will shine.&lt;/p&gt;
&lt;h3&gt;Moral Implications&lt;/h3&gt;
&lt;p&gt;We talked a little about the morals of A.I. above but here we will go more in depth.  One of the main issues with A.I. is who owns the content generative A.I. generates?  This content is being created by A.I. trained using millions of images of art from different artists, it basically learns and replicates just like a human.  There is nothing new under the sun, we do things the same way just slower.  An artist looks at other artists work for inspiration, so in that case is the art produced from that artist original since its inspired by experience?&lt;/p&gt;
&lt;p&gt;We are missing something important here, inspiration doesn't only come from experience gained from other's work; but from our experience in life and that's where the AI will fall short I think.  The depth of anything generated by A.I. will be limited because A.I. has no life experience to look to for inspiration.  They can only copy.&lt;/p&gt;
&lt;p&gt;Even so this hasn't stopped many from being fearful of A.I. to the point of avoiding it entirely, while I myself am worried about the negative impact it will have on our own problem solving abilities.&lt;/p&gt;
&lt;p&gt;If you made it this far thanks so much for reading!  Keep checking back here on my blog for new posts about technology, life, philosophy and more!  Thanks for reading, and this was my two beans.&lt;/p&gt;</content><category term="Information Technology"></category><category term="computers"></category><category term="ai"></category><category term="bio"></category><category term="computing"></category><category term="society"></category></entry><entry><title>Burning Time</title><link href="https://codecanna.github.io/burning-time.html" rel="alternate"></link><published>2024-11-01T22:46:00-07:00</published><updated>2024-11-01T22:46:00-07:00</updated><author><name>Mark Waid</name></author><id>tag:codecanna.github.io,2024-11-01:/burning-time.html</id><summary type="html">&lt;p&gt;What's your time worth to you?&lt;/p&gt;</summary><content type="html">&lt;h2&gt;What is time to you?&lt;/h2&gt;
&lt;p&gt;Time, a human construct?  Or natural phenomenon. Whatever side you are on the effects of time on everything around us is very real.  We often sit and wonder why time is moving slow, or we wonder why it moves fast when we are having a good time when we actually want it to last.&lt;/p&gt;
&lt;p&gt;Time unlike most possessions we have in our lives is irreplaceable, completely and totally irreplaceable.  Kind of like our loved ones, and the time we spend with them.  So that makes us wonder, how can it be that we have a system to sell our time for something as replaceable as money?  It seems twisted and unnatural.  We become part of this human made system where our time is controlled by some suit or group of suits.  To me this is unacceptable, this is backwards. I don't pretend to have the answers or another better magical system, I'm just calling out the one we got because I feel it necessary.&lt;/p&gt;
&lt;p&gt;I'm a 30 year old autistic adult who has been through almost as many jobs as my age, however I've never been fired, most of these jobs I quit because of the way I was being treated, the others because I was made fun of for being slower.  All these years of these types of jobs and all the change that came with moving jobs so often has left me professionally empty and uncaring. I am against this employment system we have now because its been so awful to me.  If you reading this is an autistic adult, who have had similar experiences in the work place know that you are not alone!  You are a person just like anyone else who is employed where you are.  Don't take crap from co-workers and make sure you are comfortable at work.  Because your time is invaluable, its beyond value.  You can't truly put a price on it.  If anything is an awful human construct it's the concept of trading time for money.&lt;/p&gt;
&lt;p&gt;And that's my two beans!&lt;/p&gt;</content><category term="Philosophy"></category><category term="time"></category><category term="money"></category><category term="thoughts"></category><category term="opinions"></category></entry><entry><title>Hello, World!</title><link href="https://codecanna.github.io/hello-world.html" rel="alternate"></link><published>2024-11-01T13:28:00-07:00</published><updated>2024-11-01T13:28:00-07:00</updated><author><name>Mark</name></author><id>tag:codecanna.github.io,2024-11-01:/hello-world.html</id><summary type="html">&lt;p&gt;Hello, World welcome to my blog!&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Hello, World!&lt;/h1&gt;
&lt;p&gt;Hello!  Welcome to the first post of my blog.  This feels akin to writing in a diary, except it's meant to be shared.  My name is Mark, and I'm starting this blog to hold everything that my brain can't anymore.  I learn as I get older the more important realestate in my brain becomes.  Here I will write my two cents(beans) about different topics I find interesting or that I think should just be written about.&lt;/p&gt;
&lt;p&gt;This is the beginning of my journey into the world of blogging.  What am I looking to get out of it?  I ask myself this question as well, and I haven't quite answered that yet, maybe thats the whole point of this...&lt;/p&gt;
&lt;p&gt;Right now there's not set upload schedule or anything set in stone, I just want to have fun and perhaps share some important lessons I learned in my life.&lt;/p&gt;
&lt;p&gt;This was my Two Beans!&lt;/p&gt;</content><category term="General"></category><category term="mark"></category><category term="hello"></category><category term="blog"></category></entry></feed>